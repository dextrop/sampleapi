INIT_VIEW_BASIC_IMPORT = "from src.views.statusview import StatusView\n"

SAMPLE_VIEW = '''from rest_framework import generics
from rest_framework import mixins
from rest_framework.status import HTTP_200_OK
from src.lib.customresponse import CustomResponse

class StatusView(generics.GenericAPIView, mixins.UpdateModelMixin, mixins.DestroyModelMixin,
                     mixins.ListModelMixin):

    def get(self, requests):
        Response = True
        return CustomResponse(message="Server Is Up and Running", payload=Response, code=HTTP_200_OK)
'''

LOGIN_VIEW = '''from rest_framework import generics
from rest_framework import mixins
from rest_framework.status import HTTP_200_OK
from src.lib.customresponse import CustomResponse
from src.lib.loggingmixin import LoggingMixin
from src.controllers import API_NAMEController

class API_NAMEView(LoggingMixin, generics.GenericAPIView, mixins.UpdateModelMixin, mixins.DestroyModelMixin,
                     mixins.ListModelMixin):

    def post(self, requests):
        Response = API_NAMEController().login(request_data=requests.data)
        return CustomResponse(message="Login Api view", payload=Response, code=HTTP_200_OK)
'''

SIGNUP_VIEW = '''from rest_framework import generics
from rest_framework import mixins
from rest_framework.status import HTTP_200_OK
from src.lib.customresponse import CustomResponse
from src.lib.loggingmixin import LoggingMixin
from src.controllers import API_NAMEController

class API_NAMEView(LoggingMixin, generics.GenericAPIView, mixins.UpdateModelMixin, mixins.DestroyModelMixin,
                     mixins.ListModelMixin):

    def post(self, requests):
        Response = API_NAMEController().signup(request_data=requests.data)
        return CustomResponse(message="Signup Api view", payload=Response, code=HTTP_200_OK)
'''
AUTHENTICATED_VIEW = '''from rest_framework import generics
from rest_framework import mixins
from rest_framework.status import HTTP_200_OK
from src.lib.customresponse import CustomResponse
from src.lib.loggingmixin import LoggingMixin
from src.controllers import API_NAMEController
from src.lib.permissions import IsAuthenticated

class API_NAMEView(LoggingMixin, generics.GenericAPIView, mixins.UpdateModelMixin, mixins.DestroyModelMixin,
                     mixins.ListModelMixin):
    permission_classes = (IsAuthenticated, ) # permission class
    
    def get(self, requests):
        # GET api view
        Response = API_NAMEController().get(request_data=requests.GET)
        return CustomResponse(message="API_NAME GET Api view", payload=Response, code=HTTP_200_OK)

    def post(self, requests):
        # POST api view
        Response = API_NAMEController().add(request_data=requests.data)
        return CustomResponse(message="API_NAME POST Api view", payload=Response, code=HTTP_200_OK)

    def put(self, requests):
        # PUT api view
        Response = API_NAMEController().modify(request_data=requests.data)
        return CustomResponse(message="API_NAME PUT Api view", payload=Response, code=HTTP_200_OK)

    def delete(self, requests):
        # DELETE api view
        Response = API_NAMEController().delete(request_data=requests.data)
        return CustomResponse(message="API_NAME DELETE Api view", payload=Response, code=HTTP_200_OK)                        
'''
NORMAL_VIEW = AUTHENTICATED_VIEW.replace("from src.lib.permissions import IsAuthenticated", "")
NORMAL_VIEW = NORMAL_VIEW.replace("permission_classes = (IsAuthenticated, ) # permission class", "")