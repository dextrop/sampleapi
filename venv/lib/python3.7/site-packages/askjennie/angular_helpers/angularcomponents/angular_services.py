ACCOUNT_MANAGER_SERVICE = '''import { Injectable } from '@angular/core';
import { Router } from '@angular/router';
import { ApiserviceService } from './apiservice.service';

@Injectable({
  providedIn: 'root'
})
export class AccountmanagerService {
  key_session = "PROJECT_NAME-data";
  constructor(public router: Router, private apiservice: ApiserviceService) { }

  is_logged_in() {
    var obj = localStorage.getItem(this.key_session);
    if (!obj) {
      return false;
    } else {
      return true;
    }
  }

  logout() {
    localStorage.removeItem(this.key_session);
    window.location.href = "/";
  }

  save_user_data(user_data, redirect_to_dashboard) {
    localStorage.setItem(this.key_session, JSON.stringify(user_data));
    if (redirect_to_dashboard) {
      window.location.reload();
    }    
  }

  get_user_data() {
    return JSON.parse(localStorage.getItem(this.key_session));
  }
}'''

AUTH_GAURD_TS = '''import { Injectable } from '@angular/core';
import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';
import { Observable } from 'rxjs';
import { AccountmanagerService } from './accountmanager.service';

@Injectable({
  providedIn: 'root'
})
export class AuthGuard implements CanActivate {
  constructor(private am: AccountmanagerService, private router:Router) {
    
  }
  canActivate(
    next: ActivatedRouteSnapshot,
    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {  
      if(this.am.is_logged_in()){
        return true;
      } else {
        this.router.navigate(["login"]);
        return false;
      }
  }
  
}'''


API_SERVICE = '''import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { AccountmanagerService } from './accountmanager.service';

@Injectable({
  providedIn: 'root'
})
export class ApiserviceService {
  
  BASE_URL = "http://localhost:8000/";
  
  LOGIN_ENDPOINT = "v1/login/";
  SIGNUP_ENDPOINT = "v1/signup/";
  
  httpOption = {
    headers: new HttpHeaders({
      'Content-Type':  'application/json'
    })
  }
  constructor(public http: HttpClient) {}

  login(login_details):Observable<any> {
    return this.http.post<any>(this.BASE_URL + this.LOGIN_ENDPOINT, login_details);
  }
  
  signup(signup_details):Observable<any> {
    return this.http.post<any>(this.BASE_URL + this.SIGNUP_ENDPOINT, signup_details);
  }
}
'''