from askjennie.angular_helpers.angularcomponents import *
from askjennie.angular_helpers.validateangularconfigration import ValidateAngularConfigration

class AngularHelper():
    def __init__(self, project_location, project_name):
        self.project_name = project_name.replace(" ", "").replace("-", "").replace("_", "")
        if project_location[:-1] != "/":
            project_location = project_location + "/"
        self.project_location = project_location
        self.project_path = project_location + self.project_name + "/"
        self._validator = ValidateAngularConfigration(project_name=project_name, project_path=project_location)

    def create_project(self):
        self._validator.validate_project_create()
        create_project(project_path=self.project_location, project_name=self.project_name)
        project_setup(install_angular_material=True)
        update_basic_app_modules()

    def start_project(self, project_settings):
        """
        project_settings = {
            "components": [
                {
                    "component_name": "Home",
                    "endpoint": "",
                    "component_type": "normal",
                },
                {
                    "component_name": "Login",
                    "endpoint": "login",
                    "component_type": "login",
                    "redirect_to": "introduction"
                },
                {
                    "component_name": "Introduction",
                    "endpoint": "introduction",
                    "component_type": "normal",
                    "is_authenticated": "True"
                },
                {
                    "component_name": "Start A Project",
                    "endpoint": "start-a-project",
                    "component_type": "normal"
                    "is_authenticated": "True"
                },
                {
                    "component_name": "Request Distribution",
                    "endpoint": "request-distribution",
                    "component_type": "normal"
                    "is_authenticated": "True"
                }
            ],
            "apis": [],
        }
        :return:
        """
        components, apis, base_api_config, is_login_present = self._validator.validate_project_start(project_settings)
        create_project(project_path=self.project_location, project_name=self.project_name)
        project_setup(install_angular_material=True)

        for component in components:
            self.add_component(component)

        update_basic_app_modules()
        write_app_component_files(components)

    def add_component(self, component_configration):
        if not self._validator.do_project_exits():
            raise ValueError("Project Does not exits")
        if component_configration["component_type"] == "login":
            if "redirect_to" in component_configration:
                redirect_to = component_configration["redirect_to"]
            else:
                redirect_to = ""
            add_login_component(redirect_to=redirect_to)
        elif component_configration["component_type"] == "signup":
            if "redirect_to" in component_configration:
                redirect_to = component_configration["redirect_to"]
            else:
                redirect_to = ""
            add_signup_component(redirect_to=redirect_to)
        else:

            add_normal_component(component_configration)
